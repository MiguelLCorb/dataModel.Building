---
# Copyright (c) 2020 Contributors to Smart-Data-Models
# see https://github.com/smart-data-models/dataModel.Building

Building:
  required:
    - type
    - id
    - category
    - address
  allOf:
    - $ref: 'https://smart-data-models.github.io/data-models/ngsi-ld.yaml#/Common'
  type: object
  description: |
      This entity contains a harmonised description of a Building. This entity is associated with the vertical segments of smart homes, smart cities, industry and related IoT applications.
      This data model has been partially developed in cooperation with mobile operators and the [GSMA](https://www.gsma.com/iot/iot-big-data/), compared to GSMA data model following changes are introduced:
      -   the reference to `BuildingType` is removed, since `BuildingType` compared to
          `category` attribute does not introduce significant information.
      
      -   `category` attribute is required.
      -   `openingHours` is introduced following schema.org data model to allow
          fine-grained on building opening times. GSMA supported this as free text in
          the `notes` attribute (removed as well).
      
      -   `refSubscriptionService` is not supported, since `SubscriptionService` model
          is not supported currently.
      
      Data Model. For a full description of the following attributes refer to GSMA [IoT Big Data Harmonised Data Model](https://github.com/GSMADeveloper/NGSI-LD-Entities)

  properties:
    address:
      $ref: 'https://smart-data-models.github.io/data-models/schema.org.yaml#/address'
    alternateName:
      x-ngsi:
        type: Property
        model: 'https://schema.org/Text'
      type: string
      description: 'Alternate Name of the Building'
    areaServed:
      x-ngsi:
        type: Property
        model: 'https://schema.org/Text'
      type: string
      description: 'Higher level area to which the building belongs to. It can be used to group buildings by district, neighbourhood, etc.'
    containedInPlace:
      description: "The enclosing area the Building lies within"
      externalDocs: 
        url: "http://geojson.org/geojson-spec.html#geometry-objects"
      properties: 
        coordinates: 
          oneOf: 
            - 
              $ref: "https://smart-data-models.github.io/data-models/geojson-ld.yaml#/Polygon/allOf/1/properties/coordinates"
            - 
              $ref: "https://smart-data-models.github.io/data-models/geojson-ld.yaml#/MultiPolygon/allOf/1/properties/coordinates"
        type: 
          $ref: "https://smart-data-models.github.io/data-models/geojson-ld.yaml#/Geometry/properties/type"
      required: 
        - type
        - coordinates
      type: object
      x-ngsi: 
        model: 
          - "https://purl.org/geojson/vocab#Polygon"
          - "https://purl.org/geojson/vocab#MultiPolygon"
        type: GeoProperty
    category:
      $ref: >-
        https://smart-data-models.github.io/data-models/openstreetmap.yaml#/Categories
    dataProvider:
      $ref: >-
        https://smart-data-models.github.io/data-models/fiware-terms.yaml#/dataProvider
    description:
      $ref: >-
        https://smart-data-models.github.io/data-models/ngsi-ld.yaml#/description
    floorsAboveGround:
      x-ngsi:
        type: Property
        model: 'https://schema.org/Integer'
      type: integer
      description: 'Number of floors above ground within the building'
      format: int32
    floorsBelowGround:
      x-ngsi:
        type: Property
        model: 'https://schema.org/Integer'
      type: integer
      description: 'Number of floors below ground within the building'
      format: int32
    location:
      $ref: 'https://smart-data-models.github.io/data-models/ngsi-ld.yaml#/location'
    name:
      $ref: 'https://smart-data-models.github.io/data-models/ngsi-ld.yaml#/name'
    occupier:
      x-ngsi:
        model: "https://schema.org/URL"
        type: Relationship
      type: array
      description: 'Link to the occupiers of the building'
      items:
        oneOf:
          - type: string
            format: uri
          - &ref_0
            anyOf:
              - type: string
                minLength: 1
                maxLength: 256
                pattern: '^[\w\-\.\{\}\$\+\*\[\]`|~^@!,:\\]+$'
              - type: string
                format: uri
    openingHours:
      $ref: >-
        https://smart-data-models.github.io/data-models/schema.org.yaml#/openingHours
    owner:
      $ref: >-
        https://smart-data-models.github.io/data-models/fiware-terms.yaml#/owner
    refMap:
      x-ngsi:
        model: "https://schema.org/URL"
        type: Relationship
      type: string
      description: 'The URL holding a map of the building'
      format: uri
    source:
      $ref: >-
        https://smart-data-models.github.io/data-models/fiware-terms.yaml#/source
